# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AppModel {
  status: Int!
}

input BookmarkCreateInputDTO {
  note: String!
  original: String!
  owner: String!
  tags: [String!]!
}

type BookmarkDTO {
  _id: String!
  createAt: DateTime
  domain: String!
  note: String!
  original: String!
  owner: String!
  tags: [String!]!
  updateAt: DateTime
}

input BookmarkEditInputDTO {
  _id: String!
  note: String
  original: String
  tags: [String!]
}

input BookmarkGetInputDTO {
  bookmarkId: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  addBookmark(BookmarkCreateInputDTO: BookmarkCreateInputDTO!): BookmarkDTO!
  addTagToBookmark(TagAddToBookmarkDTO: TagAddToBookmarkDTO!): BookmarkDTO!
  createAccount(UserRegisterInputDTO: UserRegisterInputDTO!): UserResponseDTO!
  createTag(TagCreateInputDTO: TagCreateInputDTO!): TagDTO!
  deleteTag(BookmarkGetInputDTO: BookmarkGetInputDTO!): BookmarkDTO!
  editBookmark(BookmarkEditInputDTO: BookmarkEditInputDTO!): BookmarkDTO!
  editTag(TagEditInputDTO: TagEditInputDTO!): TagDTO!
  setArchiveTag(BookmarkGetInputDTO: BookmarkGetInputDTO!): BookmarkDTO!
  userLogin(UserLoginInputDTO: UserLoginInputDTO!): UserLoginResponseDTO!
}

type Query {
  allTextSearchBookmark(SearchTextInputDTO: SearchTextInputDTO!): SearchDTO!
  getABookmark(bookmarkId: String!): BookmarkDTO!
  getAccount(id: String!): UserResponseDTO!
  getRecentBookmark(limit: Float = 100, skip: Float = 0, userId: String!): [BookmarkDTO!]!
  searchFilterText(SearchFilterTag: SearchFilterTag!): SearchDTO!
  serverStatus: AppModel!
}

type SearchDTO {
  results: [BookmarkDTO!]!
}

input SearchFilterTag {
  owner: String!
  tags: [String!]!
}

input SearchTextInputDTO {
  owner: String!
  tags: [String!]
  text: String
}

input TagAddToBookmarkDTO {
  _id: String!
  bookmarkId: String!
}

input TagCreateInputDTO {
  label: String!
  owner: String!
  type: TagType!
}

type TagDTO {
  _id: String!
  createAt: DateTime
  label: String!
  owner: String!
  type: TagType!
  updateAt: DateTime
}

input TagEditInputDTO {
  _id: String!
  label: String
  owner: String!
  type: TagType!
}

enum TagType {
  system
  user
}

input UserLoginInputDTO {
  email: String!
  password: String!
}

type UserLoginResponseDTO {
  _id: String!
  displayName: String!
  email: String!
  username: String!
}

input UserRegisterInputDTO {
  displayName: String!
  email: String!
  password: String!
  username: String!
}

type UserResponseDTO {
  _id: String!
  createAt: DateTime
  deactivate: Boolean
  displayName: String!
  email: String!
  username: String!
}
